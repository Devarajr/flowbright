<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <meta name='description' content=''>
    <meta name='author' content=''>

    <title>FlowBright</title>
    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/style.css" rel="stylesheet">
  </head>
  <body>
    <nav id='top' class='navbar navbar-static-top navbar-inverse' role='navigation'>
      <div class='container'>
        <div class='navbar-header'>
          <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-ex1-collapse'>
            <span class='sr-only'>Toggle navigation</span>
            <span class='icon-bar'></span>
            <span class='icon-bar'></span>
            <span class='icon-bar'></span>
          </button>
          <a class='navbar-brand'>Flowbright</a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class='collapse navbar-collapse navbar-ex1-collapse'>
          <ul class='nav navbar-nav'>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container -->
    </nav>
    <form>

  <select class="target">
    <option value="option1" selected="selected">Weekly</option>
    <option value="option2">Minutely</option>
  </select>
</form>

    
    <div class='container'>
      <div class='row' style='margin-top: 20px'>
        <div class='col-md-offset-2 col-md-8 well'>
          <!-- these labels show if the water was running in the last 10 seconds and will update live -->
          <h3><span id="water_running" class="label label-primary" style="display:none">Water Running</span></h3>
          <h3><span id="water_not_running" class="label label-default" style="display:inline">Water Stopped</span></h3>
          <div id="waterusage" style="min-width: 730px; height: 400px; margin: 0 auto"></div>
          <div class="input-group">
            <input id="text_to_num" type="text" class="form-control" placeholder="+15556667777">
            <span class="input-group-btn">
              <button class="btn btn-default" type="button" onclick="sendTextSummary()">SMS</button>
            </span>
        </div>

   <div style="display:inline-block" id="sum_this_month"></div>
        <div style="display:inline-block" id="sum_previous_month"></div>

        <div>
          <h2 style="font-style:bold">Projected Donation 
          <span id="projectedDonation">$20</span>
         <button class="btn btn-default" type="button" onclick="sendDonation()">Donate</button>

        </div>


        </div>
      </div>
      <div class="total_donation">
        <p class="total_donation_title">My lifetime water contributions</p>
        <p class="total_donation_amount"><span id="lifetimeContributions">653</span> Gallons</p>
        <div class="total_donation_people">
          <span class="icon-group"></span>
          <span class="icon-group"></span>
          <span class="icon-group"></span>
          <span class="icon-group"></span> 
        </div>
        <div class="total_donate_people_count">Fresh water for <span id="totalPeople">106</span> people</div>
        <div class="total_donation_overlay"></div>
        <img class="total_donation_hero" src="../img/donatedChildren.jpeg" />
      </div>
      <hr>
      <footer>
        <div class='row'>
          <div class='col-lg-12'>
            <p class='text-center'>Copyright &copy; Flowbright 2014 &middot; 
              <a href='http://facebook.com/flowbright'>Facebook</a> &middot; 
              <a href='http://twitter.com/flowbright'>Twitter</a>
            </p>
          </div>
        </div>
      </footer>
      
    </div><!-- /.container -->


  <!-- javascript -->
  <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js'></script>
  <script src='https://netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js'></script>
  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
  <script type="text/javascript" src="http://underscorejs.org/underscore-min.js"></script>
  <script type="text/javascript" src="http://momentjs.com/downloads/moment-with-langs.min.js"></script>
  <script src="http://code.highcharts.com/highcharts.js"></script>
  
  <!-- Keen "Library" -->
 <script type="text/javascript"> //using hichart via keen api instead of keen io
    var Keen=Keen||{configure:function(e){this._cf=e},addEvent:function(e,t,n,i){this._eq=this._eq||[],this._eq.push([e,t,n,i])},setGlobalProperties:function(e){this._gp=e},onChartsReady:function(e){this._ocrq=this._ocrq||[],this._ocrq.push(e)}};(function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://":"http://")+"dc8na2hxrj29i.cloudfront.net/code/keen-2.1.0-min.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})();

    // Configure the Keen object with your Project ID and (optional) access keys.
    Keen.configure({
        projectId: "50ba759d897a2c45c2000000",
        writeKey: "72a1ad85456fd2361cfe8b65d240eab16b083caa944c11d9507761e536d34822eca4cefad12e482373ee41278953f98c6ff724b33b56fd5971e8d34cdd284cb6c3f202d9f13329e39c01eb9a35d1124cae81d9a4505992fce03be4030e32b19c72df266c55a18937f001e7158f6eac44", // required for sending events
        readKey: "f7a829ecc9e237949b0b97245c828661ff0c9f46eaec35a7dc4cfd3b4ef42804f5fc1859ecad05bd7d72b6c3a2e4047ae39cba86b5d51c770be26b0a406cbb44650d20fd05fb7896293f015cec3af3ca2df8a507927bf4cfed9275eb89e8dee855cf45db75b221074bda2f737d2810f2"    // required for doing analysis
    });


 Keen.onChartsReady(function() {
      usageSum = new Keen.Series("flow", {
        analysisType: "sum",
        targetProperty: "volume", 
        timeframe: "previous_7_days",
        interval: "daily"
      });

      usageSum.draw(document.getElementById("waterusage"), {
        label: "Water Used (mL)"
      });


  var metricThisMonth = new Keen.Metric("flow", {
    analysisType: "sum",
    timeframe: "this_month",
    targetProperty: "volume"
  });

    var metricLastMonth = new Keen.Metric("flow", {
    analysisType: "sum",
    timeframe: "previous_month",
    targetProperty: "volume"
  });

  var sumThisMonth = new Keen.Number(metricThisMonth, {
        label: "Total this month (gal)",
        "border-radius": 5
    });

  var sumLastMonth = new Keen.Number(metricLastMonth, {
        label: "Total previous month (gal)",
        "border-radius": 5
    });

  sumThisMonth.draw(document.getElementById("sum_this_month"));
  sumLastMonth.draw(document.getElementById("sum_previous_month"));
  
    });

  </script>

  <!-- This script handles building weekly summaries with Keen and texting them to users with Twilio -->
  <script type="text/javascript"> 
    $( ".target" ).change(function() {
      var selectedDropdown = $(this).val();
      console.log(selectedDropdown);
      if(selectedDropdown == "option2"){
        pullData();
      }
      else if(selectedDropdown == "option1"){
        pullWeek();
      }

    });


    var twilioURL = "https://agent.electricimp.com/tlulR8wZXpxy/send_txt"

    // This will draw a line chart of usage over the last 7 days, if you don't want to use highcharts
    // Keen.onChartsReady(function() {
    //  usageSum = new Keen.Series("flow", {
    //    analysisType: "sum",
    //    targetProperty: "volume", 
    //    timeframe: "previous_7_days",
    //    interval: "daily"
    //  });

    //  usageSum.draw(document.getElementById("waterusage"), {
    //    label: "Water Used (mL)"
     // });
    //}); -->

    function sendTextSummary() {
      // configure  Keen query to get the usage summary nicely rolled up
      usageSum = new Keen.Series("flow", {
        analysisType: "sum",
        targetProperty: "volume", 
        timeframe: "previous_7_days",
        interval: "daily"
      });

      // send the Keen query to get a result object with the data we want
      usageSum.getResponse(function(response){
        var textMsg = "Your Usage Summary for the last 7 days:\n"
        for (var index in response.result) {
          var date = new Date(response.result[index].timeframe.start);
          var day = date.getDate() + 1;
          var month = date.getMonth() + 1; //Months are zero based
          textMsg += (month+"/"+day);
          textMsg += ": ("
          textMsg += Math.round(response.result[index].value*0.00026*1000)/1000*100;
          //textMsg += Math.round(response.result[index].value);
          textMsg += " gal)\n";
        }
        console.log(textMsg);
        
        // get the text target number from the input field
        var targetNum = $('#text_to_num').val();
        // actually send the request to send a text
        var reqbody = {};
        reqbody.to = targetNum;
        reqbody.msg = textMsg;
        $.ajax({
          type: 'POST',
          url: twilioURL,
          data: JSON.stringify(reqbody)
        });
      });
    }

  var lifetimeContributions = 653;
  var totalPeople = 106;

        function sendDonation() {
    
      lifetimeContributions = lifetimeContributions + 4930;
      document.getElementById("lifetimeContributions").innerHTML = lifetimeContributions.toString();

      totalPeople = totalPeople + 23;
      document.getElementById("totalPeople").innerHTML = totalPeople.toString();
    }


  </script> 

  <!-- This script handles asking the Electric Imp cloud if the device has had any water flow in the last 10s -->
  <script type="text/javascript">
    var impURL = "https://agent.electricimp.com/tlulR8wZXpxy/water_running"

    function getWaterRunning() {
      $.ajax({
        type: 'GET',
        url: impURL,
        success: function(water_running) {
          if (water_running == "true") {
            $('#water_not_running').css('display','none');
            $('#water_running').css('display','inline');
          } else {
            $('#water_not_running').css('display','inline');
            $('#water_running').css('display','none');
          }
        }
      });
    }

    // ask the imp cloud if there's been movement once per second
    $(document).ready(function() {
      getWaterRunning();
      setInterval(getWaterRunning,1000);
    });
  </script>

  <!-- This script handles building our main charts from Keen -->
  <script type="text/javascript">    
    // Run a KeenIO query to get aggregated data
    // This will call drawChart with a callback when the query is complete
    function pullData() {
        $.getJSON("https://api.keen.io/3.0/projects/50ba759d897a2c45c2000000/queries/sum?api_key=f7a829ecc9e237949b0b97245c828661ff0c9f46eaec35a7dc4cfd3b4ef42804f5fc1859ecad05bd7d72b6c3a2e4047ae39cba86b5d51c770be26b0a406cbb44650d20fd05fb7896293f015cec3af3ca2df8a507927bf4cfed9275eb89e8dee855cf45db75b221074bda2f737d2810f2&event_collection=flow&timeframe=this_60_minutes&target_property=volume&group_by=device&interval=minutely&percentile=50", drawChart);
    }
    function pullWeek() {
        $.getJSON("https://api.keen.io/3.0/projects/50ba759d897a2c45c2000000/queries/sum?api_key=f7a829ecc9e237949b0b97245c828661ff0c9f46eaec35a7dc4cfd3b4ef42804f5fc1859ecad05bd7d72b6c3a2e4047ae39cba86b5d51c770be26b0a406cbb44650d20fd05fb7896293f015cec3af3ca2df8a507927bf4cfed9275eb89e8dee855cf45db75b221074bda2f737d2810f2&event_collection=flow&timeframe=this_14_days&target_property=volume&group_by=device&interval=daily&percentile=50", drawChartWeek);
    }

      var drawChartWeek = function(data) {
      window.alldata = data;
      var times = _.chain(data.result).pluck("timeframe").pluck("end").map(function(time){
        return moment(time).format("MM/DD");
      }).value();     

      var series = _.chain(alldata.result).pluck("value").pluck("0").pluck("result").value();

      $('#waterusage').highcharts({
        chart: {
          type: 'column'
        },
        title: {
          text: 'Water Usage'
        },
        // subtitle: {
        //     text: 'Source: WorldClimate.com'
        // },
        xAxis: {
          categories: times
        },
        yAxis: {
          min: 0,
          title: {
            text: 'Total usage (mL)'
          }
        },
        tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' + '<td style="padding:0"><b>{point.y:.1f} mL</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
        },
        plotOptions: {
          column: {
            pointPadding: 0.2,
            borderWidth: 0
          }
        },
        series: [{
          name: 'Usage',
          data: series
        },
        {
                type: 'spline',
                name: 'Average',
                data: [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200],
                marker: {
                    lineWidth: 2,
                    lineColor: Highcharts.getOptions().colors[3],
                    fillColor: 'white'
                }
        }]
      });
    } // end of drawChart
    
    var drawChart = function(data) {
      window.alldata = data;
      var times = _.chain(data.result).pluck("timeframe").pluck("end").map(function(time){
        return moment(time).format("h:mm");
      }).value();     

      var series = _.chain(alldata.result).pluck("value").pluck("0").pluck("result").value();

      $('#waterusage').highcharts({
        chart: {
          type: 'column'
        },
        title: {
          text: 'Water Usage'
        },
        // subtitle: {
        //     text: 'Source: WorldClimate.com'
        // },
        xAxis: {
          categories: times
        },
        yAxis: {
          min: 0,
          title: {
            text: 'Total usage (mL)'
          }
        },
        tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' + '<td style="padding:0"><b>{point.y:.1f} mL</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
        },
        plotOptions: {
          column: {
            pointPadding: 0.2,
            borderWidth: 0
          }
        },
        series: [{
          name: 'Usage',
          data: series
        }]
      });
    } // end of drawChart



    
  </script>
  <link rel="stylesheet" href="http://i.icomoon.io/public/temp/8f9d369b4a/UntitledProject2/style.css">
</body>    
</html>